<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.min.css" />
    <style>
        html, body {
            height: 100%
        }
        .total-center {
            -webkit-box-align: center !important;
            -webkit-align-items: center !important;
            -ms-flex-align: center !important;
            align-items: center !important;

            -webkit-box-pack: center !important;
            -webkit-justify-content: center !important;
            -ms-flex-pack: center !important;
            justify-content: center !important
        }
        .mycard {
            width:15rem;
            height:8rem;
            float:left
        }
        .max-1-line, .max-2-lines {
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-box-orient: vertical;
        }
        .max-1-line {
            -webkit-line-clamp: 1;
        }
        .max-2-lines {
            -webkit-line-clamp: 2;
        }
        /*body {
            font-size: 10px;
        }*/
        a.card-block,
        a.card-block:hover {
            text-decoration: none;
            color: black
        }
    </style>
</head>

<body>
    <div class="container-fluid h-100 d-flex total-center flex-column">
        <div>
            <h1>Find Meetups</h1>
            <div class="form-group">
                Between
                <span class="form-control" style="display:unset; width:unset;
                    cursor:not-allowed">now</span>
                and
                <input type="date" class="form-control" style="display:unset;
                    width:unset" id="filterEndDate" />
            </div>
            <div class="form-group">
                <input type="text" class="form-control"
                    id="searchLocationTextField" placeholder="Your City" />
            </div>
        </div>
        <div id="output" style="overflow-y: scroll">
            <small class="text-muted">Select your city &amp; date</small>
        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initLocationSearch" async defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js" id="datepickerScript" async defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/store.js/1.3.20/store.min.js" async defer></script>
    <script>
    $('#datepickerScript').ready(() => {
        let now = new Date()
        let timeNow = now.getTime()
        let timeIn5Days = timeNow  +  5*24*3600*1000
        let in5Days  = new Date(timeIn5Days)
        $('#filterEndDate').val(in5Days.toLocaleDateString())

        let timeIn14Days = timeNow + 14*24*3600*1000
        let in14Days = new Date(timeIn14Days)
        if($('#filterEndDate')[0].type != 'date') {
            $('#filterEndDate').datepicker({
                startDate: now,
                endDate: in14Days
            });
        }
    })

    var App = function() {
        let apiToken = null

        this.start = function() {
            setupAPIToken()
        }

        let setupAPIToken = function() {
            // get from storage
            let token = store.get('MeetupAPIToken')
            if (token != null) {
                apiToken = token
                return
            }

            // or ask user
            let promptMessage = 'To use this app you need a Meetup API token.\n' +
                'Get yours here: https://meetup.com/meetup_api/key/ .'
            let userInput = prompt(promptMessage)
            if (userInput == null || userInput.length < 20) {
                alert('No valid API token provided. The App will probably not work now.')
                return
            }

            // store & use token
            store.set('MeetupAPIToken', userInput)
            if (store.get('MeetupAPIToken') !== userInput) {
                let message =
                    'Storing API token failed. '+
                    'You can use the token in this session, but you have to enter it next time again.'
                if (location.protocol === 'file:') {
                    message += '\n\nLocal Storage is not supported on "file:" URLs.'
                }
                alert(message)
            }
            apiToken = userInput
        }

        /*
         * Location search
         * =====================================================================
         */

        this.initLocationSearch = function() {
            let textField = $('#searchLocationTextField')[0]
            let autocomplete = new google.maps.places.Autocomplete(textField)
            autocomplete.setTypes(['geocode'])
            autocomplete.addListener('place_changed', () => {
                let place = autocomplete.getPlace()
                if (place.geometry == null) { $('#output').html(''); return; }
                let lat = place.geometry.location.lat(),
                    lon = place.geometry.location.lng()
                searchMeetup(lat, lon)
            });
        }


        let searchMeetup = function(lat, lon) {
            let url = 'https://api.meetup.com/find/events?key=' + apiToken +
                '&only=name,time,group.name,link'
            let data = {
                url: url,
                data: {lat: lat, lon: lon},
                dataType: "jsonp",
                jsonpCallback: 'fnsuccesscallback'
            }
            jQuery.ajax(data)
                .done(response => showResults(response.data))
                .fail(response => showError(response))
        }



        /*
         * "UI" Stuff
         * =====================================================================
         */

        let showResults = function(events) {
            let output = $('#output')
            output.html('')
            if (events.length == 0) {
                output.append(
                    '<div class="alert alert-danger" role="alert">' +
                        'No Meetups found.' +
                    '</div>'
                )
                return
            }
            events.forEach(event => {
                let eventDate = (new Date(event.time)).toLocaleString()
                output.append(
                    '<div class="card alert-success mycard m-2">'+
                        '<a href="' + event.link + '" class="card-block">' +
                            '<p class="card-text">' + eventDate + '</p>' +
                            '<h6 class="card-subtitle mb-2 text-muted max-1-line">' + event.group.name + '</h6>' +
                            '<small class="max-2-lines">' + event.name + '</small>' +
                        '</a>' +
                    '</div>'
                )
            })
        }

        let showError = function(message) {
            if(typeof(message) === "object") {
                message = JSON.stringify(message)
            }
            $('#output').text('ERROR: ' + message)
        }
    }



    const app = new App();

    $(document).ready(() => app.start() )

    // Forwards the call
    function initLocationSearch() {
        app.initLocationSearch();
    }
    </script>
</body>

</html>
